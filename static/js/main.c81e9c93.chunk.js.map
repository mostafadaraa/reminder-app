{"version":3,"sources":["components/App.js","actions/index.js","types.js","reducers/index.js","index.js","components/reminder.png"],"names":["App","state","text","date","Date","render_Reminders","reminders","props","className","map","reminder","key","id","moment","fromNow","onClick","remove_Reminder","src","logo","type","value","this","placeholder","onChange","e","setState","target","placeholderText","selected","showTimeSelect","timeFormat","dateFormat","timeCaption","add_Reminder","clear_Reminder","Component","connect","action","console","log","read_cookie","Math","random","bake_cookie","filter","store","createStore","ReactDOM","render","document","getElementById","module","exports"],"mappings":"qRAOMA,E,2MACFC,MAAQ,CACJC,KAAM,GACNC,KAAM,IAAIC,M,EAIdC,iBAAmB,WAAO,IACfC,EAAc,EAAKC,MAAnBD,UACP,OACI,wBAAIE,UAAU,cAELF,EAAUG,IAAI,SAAAC,GACX,OACI,wBAAIC,IAAKD,EAASE,GAAIJ,UAAU,mBAC5B,6BAAME,EAASR,MACf,6BAAMW,IAAO,IAAIT,KAAKM,EAASP,OAAOW,WACtC,yBAAKN,UAAU,2BAA2BO,QAAS,kBAAM,EAAKR,MAAMS,gBAAgBN,EAASE,MAA7F,U,wEAUlB,IAAD,OACL,OACI,yBAAKJ,UAAU,OACX,yBAAKS,IAAKC,MACV,yBAAKV,UAAU,kBACX,mDAEJ,2BACIA,UAAU,eACVW,KAAK,OACLC,MAAOC,KAAKpB,MAAMC,KAClBoB,YAAY,2BACZC,SAAU,SAACC,GAAD,OAAO,EAAKC,SAAS,CAACvB,KAAMsB,EAAEE,OAAON,WAEnD,kBAAC,IAAD,CACIZ,UAAU,eACVY,MAAOC,KAAKpB,MAAME,KAClBwB,gBAAgB,aAChBC,SAAUP,KAAKpB,MAAME,KACrBoB,SAAU,SAACpB,GAAU,EAAKsB,SAAS,CAACtB,UACpC0B,gBAAc,EACdC,WAAW,QACXC,WAAW,uBACXC,YAAY,SAEhB,4BACIjB,QAAU,WACN,EAAKR,MAAM0B,aAAa,EAAKhC,MAAMC,KAAO,EAAKD,MAAME,MACrD,EAAKsB,SAAS,CAACvB,KAAM,GAAKC,KAAM,MAEpCK,UAAU,6BALd,gBASCa,KAAKhB,mBACN,4BACIU,QAAW,kBAAM,EAAKR,MAAM2B,kBAC5B1B,UAAU,0CAFd,wB,GA9DE2B,aAqFHC,cAAQ,SAAAnC,GACnB,MAAO,CACHK,UAAWL,IAEf,CACAgC,aC/FwB,SAAC/B,EAAKC,GAC9B,IAAMkC,EAAS,CACXlB,KCJoB,eDKpBjB,OACAC,QAGJ,OADAmC,QAAQC,IAAI,MAAQF,GACbA,GDyFPrB,gBCtF2B,SAACJ,GAC5B,IAAMyB,EAAS,CACXlB,KCbuB,kBDcvBP,MAIJ,OADA0B,QAAQC,IAAI,SAAUF,GACfA,GDgFPH,eC7E0B,WAI1B,MAHe,CACXf,KCtBuB,qBF0FhBiB,CASbpC,G,wBGrEaM,EA9BG,WAAwB,IAAvBL,EAAsB,uDAAhB,GAAKoC,EAAW,uCACjC/B,EAAY,KAIhB,OAFAL,EAAQuC,sBAAY,aDLI,iBCOrBH,EAAOlB,MACNb,EAAS,sBAAOL,GAAP,CAAe,CAACC,KAAMmC,EAAOnC,KAAOC,KAAKkC,EAAOlC,KAAOS,GAAI6B,KAAKC,YACzEC,sBAAY,YAAarC,GAEzBgC,QAAQC,IAAI,gBAAgBjC,GACrBA,GDXgB,oBCajB+B,EAAOlB,MACbb,EAAYL,EAAM2C,OAAO,SAAAlC,GAAQ,OAAIA,EAASE,KAAOyB,EAAOzB,KAC5D+B,sBAAY,YAAarC,GACzBgC,QAAQC,IAAI,gBAAgBjC,GACrBA,GDhBgB,oBCkBjB+B,EAAOlB,MACbb,EAAY,GACZqC,sBAAY,YAAarC,GACzBgC,QAAQC,IAAI,gBAAgBjC,GACrBA,GAIAL,GChBT4C,G,cAAQC,YAAYxC,IAE1ByC,IAASC,OACL,kBAAC,IAAD,CAAUH,MAAOA,GACb,kBAAC,EAAD,OAEJI,SAASC,eAAe,U,mBClB5BC,EAAOC,QAAU,IAA0B,sC","file":"static/js/main.c81e9c93.chunk.js","sourcesContent":["import React , {Component} from 'react'\nimport {connect } from 'react-redux'\nimport moment from 'moment'\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport logo from './reminder.png'\nimport { add_Reminder , remove_Reminder , clear_Reminder } from '../actions'\nclass App extends Component {\n    state = {\n        text: '',\n        date: new Date()\n    }\n\n\n    render_Reminders = () => {\n        const {reminders} =  this.props ;\n        return (\n            <ul className=\"list-group\">\n                {\n                     reminders.map(reminder => {\n                        return (\n                            <li key={reminder.id} className='list-group-item'>\n                                <div>{reminder.text}</div>\n                                <div>{moment(new Date(reminder.date)).fromNow()}</div>\n                                <div className=\"closeIcon btn btn-danger\" onClick={() => this.props.remove_Reminder(reminder.id)}>X</div>\n                            </li>\n                        )\n                    })\n                }\n            </ul>\n        )\n       \n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <img src={logo} />\n                <div className=\"reminder-title\">\n                    <h2>What Should U Do ?</h2>\n                </div>\n                <input \n                    className=\"form-control\"\n                    type=\"text\" \n                    value={this.state.text}\n                    placeholder=\"Enter What U think ... ?\"\n                    onChange={(e) => this.setState({text: e.target.value})}\n                />\n                <DatePicker\n                    className=\"form-control\"\n                    value={this.state.date}\n                    placeholderText=\"Enter Date\"\n                    selected={this.state.date}\n                    onChange={(date) => {this.setState({date})}}\n                    showTimeSelect\n                    timeFormat=\"HH:mm\"\n                    dateFormat=\"MMMM d, yyyy h:mm aa\"\n                    timeCaption=\"time\"\n                />\n                <button \n                    onClick={ () => {\n                        this.props.add_Reminder(this.state.text , this.state.date)\n                        this.setState({text: '' , date: ''})\n                    }}\n                    className=\"btn btn-primary btn-block\"\n                >\n                    Add Reminder\n                </button>\n                {this.render_Reminders()}\n                <button \n                    onClick ={ () => this.props.clear_Reminder()}\n                    className=\"btn btn-danger btn-block clearReminder\"\n                >\n                    Clear Reminders\n                </button>\n            </div>\n        )\n    }\n}\n\n// function mapDispatchToProps(dispatch) {\n//     return {\n//         clear_Reminder : () => dispatch(clear_Reminder())\n//     }\n// }\n\n// function mapStateToProps(state) {\n//     return {\n//         reminders: state\n//     }\n// }\n\nexport default connect(state => {\n    return {\n        reminders: state\n    }\n} , {\n    add_Reminder,\n    remove_Reminder,\n    clear_Reminder\n}\n)(App)","import {ADD_REMINDER, REMOVE_REMINDER, CLEAR_REMINDERS} from '../types'\n\nexport const add_Reminder = (text,date) => {\n    const action = {\n        type: ADD_REMINDER ,\n        text,\n        date\n    }\n    console.log(\"Add\" , action)\n    return action\n} \n\nexport const remove_Reminder = (id) => {\n    const action = {\n        type: REMOVE_REMINDER,\n        id\n    }\n\n    console.log(\"Remove\", action)\n    return action\n}\n\nexport const clear_Reminder = () => {\n    const action = {\n        type: CLEAR_REMINDERS\n    }\n    return action\n}","export const ADD_REMINDER = 'ADD_REMINDER'\nexport const REMOVE_REMINDER = 'REMOVE_REMINDER'\nexport const CLEAR_REMINDERS = 'CLEAR_REMINDERS'","import {ADD_REMINDER, REMOVE_REMINDER, CLEAR_REMINDERS} from '../types'\nimport { bake_cookie, read_cookie }  from 'sfcookies'\nconst reminders = (state=[] , action) => {\n    let reminders = null;\n\n    state = read_cookie('reminders')\n\n    if(action.type === ADD_REMINDER){\n        reminders = [...state , {text: action.text , date:action.date , id: Math.random()}]\n        bake_cookie('reminders', reminders)\n\n        console.log(\"from reducer \",reminders)\n        return reminders\n    } \n    else if ( action.type === REMOVE_REMINDER) {\n        reminders = state.filter(reminder => reminder.id !== action.id)\n        bake_cookie('reminders', reminders)\n        console.log(\"from reducer \",reminders)\n        return reminders\n    }\n    else if ( action.type === CLEAR_REMINDERS) {\n        reminders = []\n        bake_cookie('reminders', reminders)\n        console.log(\"from reducer \",reminders)\n        return reminders\n    }\n    \n    else {\n        return state\n    }\n}\n\nexport default reminders","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { createStore} from 'redux';\nimport {Provider} from 'react-redux'\n\nimport  reminders from './reducers'\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css'\n\n\nconst store = createStore(reminders)\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n    document.getElementById('root')\n)","module.exports = __webpack_public_path__ + \"static/media/reminder.2c51f81e.png\";"],"sourceRoot":""}